//
// Generated file, do not edit! Created by nedtool 5.0 from castalia/src/node/communication/routing/RoutingPacket.msg.
//

#ifndef __ROUTINGPACKET_M_H
#define __ROUTINGPACKET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Struct generated from castalia/src/node/communication/routing/RoutingPacket.msg:13 by nedtool.
 */
struct RoutingInteractionControl_type
{
    RoutingInteractionControl_type();
    double RSSI;
    double LQI;
    int nextHop;
    int lastHop;
    unsigned int sequenceNumber;
    ::omnetpp::opp_string pathFromSource;
    ::omnetpp::opp_string source;
};

// helpers for local use
void __doPacking(omnetpp::cCommBuffer *b, const RoutingInteractionControl_type& a);
void __doUnpacking(omnetpp::cCommBuffer *b, RoutingInteractionControl_type& a);

inline void doParsimPacking(omnetpp::cCommBuffer *b, const RoutingInteractionControl_type& obj) { __doPacking(b, obj); }
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, RoutingInteractionControl_type& obj) { __doUnpacking(b, obj); }

/**
 * Class generated from <tt>castalia/src/node/communication/routing/RoutingPacket.msg:23</tt> by nedtool.
 * <pre>
 * packet RoutingPacket
 * {
 *     RoutingInteractionControl_type RoutingInteractionControl;
 * }
 * </pre>
 */
class RoutingPacket : public ::omnetpp::cPacket
{
  protected:
    RoutingInteractionControl_type RoutingInteractionControl;

  private:
    void copy(const RoutingPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const RoutingPacket&);

  public:
    RoutingPacket(const char *name=nullptr, int kind=0);
    RoutingPacket(const RoutingPacket& other);
    virtual ~RoutingPacket();
    RoutingPacket& operator=(const RoutingPacket& other);
    virtual RoutingPacket *dup() const {return new RoutingPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual RoutingInteractionControl_type& getRoutingInteractionControl();
    virtual const RoutingInteractionControl_type& getRoutingInteractionControl() const {return const_cast<RoutingPacket*>(this)->getRoutingInteractionControl();}
    virtual void setRoutingInteractionControl(const RoutingInteractionControl_type& RoutingInteractionControl);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const RoutingPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, RoutingPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef __ROUTINGPACKET_M_H

