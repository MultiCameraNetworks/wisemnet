//
// Generated file, do not edit! Created by nedtool 5.0 from wise/src/node/resourceManager/WiseResourceManagerMessage.msg.
//

#ifndef __WISERESOURCEMANAGERMESSAGE_M_H
#define __WISERESOURCEMANAGERMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>wise/src/node/resourceManager/WiseResourceManagerMessage.msg:18</tt> by nedtool.
 * <pre>
 * message WiseResourceManagerMessage
 * {
 *     double powerConsumed;
 * }
 * </pre>
 */
class WiseResourceManagerMessage : public ::omnetpp::cMessage
{
  protected:
    double powerConsumed;

  private:
    void copy(const WiseResourceManagerMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WiseResourceManagerMessage&);

  public:
    WiseResourceManagerMessage(const char *name=nullptr, int kind=0);
    WiseResourceManagerMessage(const WiseResourceManagerMessage& other);
    virtual ~WiseResourceManagerMessage();
    WiseResourceManagerMessage& operator=(const WiseResourceManagerMessage& other);
    virtual WiseResourceManagerMessage *dup() const {return new WiseResourceManagerMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual double getPowerConsumed() const;
    virtual void setPowerConsumed(double powerConsumed);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const WiseResourceManagerMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, WiseResourceManagerMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __WISERESOURCEMANAGERMESSAGE_M_H

