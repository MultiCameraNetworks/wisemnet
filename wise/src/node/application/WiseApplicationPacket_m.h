//
// Generated file, do not edit! Created by nedtool 5.0 from wise/src/node/application/WiseApplicationPacket.msg.
//

#ifndef __WISEAPPLICATIONPACKET_M_H
#define __WISEAPPLICATIONPACKET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
        #include "ApplicationPacket_m.h"
        #include "CastaliaMessages.h"
// }}

/**
 * Enum generated from <tt>wise/src/node/application/WiseApplicationPacket.msg:29</tt> by nedtool.
 * <pre>
 * //!< \enum WiseApplicationPacketType
 * //!<  \brief Type of application package
 * enum WiseApplicationPacketType
 * {
 * 
 *     WISE_APP_NORMAL = 0;
 *     WISE_APP_DIRECT_COMMUNICATION = 10;
 *     WISE_APP_NEIGHBOUR_DISCOVER_REQUEST = 20;
 *     WISE_APP_NEIGHBOUR_DISCOVER_REPLY = 21;
 *     WISE_APP_NEIGHBOUR_DISCOVER_TIMEOUT = 22;
 *     WISE_APP_NEIGHBOUR_DISCOVER_DONE = 23;
 *     WISE_APP_OUT_OF_ENERGY = 30;
 * }
 * </pre>
 */
enum WiseApplicationPacketType {
    WISE_APP_NORMAL = 0,
    WISE_APP_DIRECT_COMMUNICATION = 10,
    WISE_APP_NEIGHBOUR_DISCOVER_REQUEST = 20,
    WISE_APP_NEIGHBOUR_DISCOVER_REPLY = 21,
    WISE_APP_NEIGHBOUR_DISCOVER_TIMEOUT = 22,
    WISE_APP_NEIGHBOUR_DISCOVER_DONE = 23,
    WISE_APP_OUT_OF_ENERGY = 30
};

/**
 * Enum generated from <tt>wise/src/node/application/WiseApplicationPacket.msg:41</tt> by nedtool.
 * <pre>
 * //!< \enum WiseNeigborhoodPacketType
 * //!<  \brief Type of package when communicating with neigbourgs 
 * enum WiseNeigborhoodPacketType
 * {
 * 
 *     WISE_NEIGHBOUR_RESET = 0; //!< Reset
 *     WISE_NEIGHBOUR_UNKNOWN = 1; //!< Unknown neigbourghood is used
 *     WISE_NEIGHBOUR_COM = 2; //!< Communications graph is used
 *     WISE_NEIGHBOUR_FOV = 3; //!< Vision graph is used
 * }
 * </pre>
 */
enum WiseNeigborhoodPacketType {
    WISE_NEIGHBOUR_RESET = 0,
    WISE_NEIGHBOUR_UNKNOWN = 1,
    WISE_NEIGHBOUR_COM = 2,
    WISE_NEIGHBOUR_FOV = 3
};

/**
 * Class generated from <tt>wise/src/node/application/WiseApplicationPacket.msg:48</tt> by nedtool.
 * <pre>
 * packet WiseApplicationPacket extends ApplicationGenericDataPacket
 * {
 *     unsigned char payload[]; //!< 
 *     unsigned int type = WISE_APP_NORMAL; //!< type of package (WiseApplicationPacketType)
 *     unsigned int TypeNeighbour = WISE_NEIGHBOUR_UNKNOWN; // Type of neigbourghood employed	 (WiseNeigborhoodPacketType)	
 * }
 * </pre>
 */
class WiseApplicationPacket : public ::ApplicationGenericDataPacket
{
  protected:
    unsigned char *payload; // array ptr
    unsigned int payload_arraysize;
    unsigned int type;
    unsigned int TypeNeighbour;

  private:
    void copy(const WiseApplicationPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WiseApplicationPacket&);

  public:
    WiseApplicationPacket(const char *name=nullptr, int kind=0);
    WiseApplicationPacket(const WiseApplicationPacket& other);
    virtual ~WiseApplicationPacket();
    WiseApplicationPacket& operator=(const WiseApplicationPacket& other);
    virtual WiseApplicationPacket *dup() const {return new WiseApplicationPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual void setPayloadArraySize(unsigned int size);
    virtual unsigned int getPayloadArraySize() const;
    virtual unsigned char getPayload(unsigned int k) const;
    virtual void setPayload(unsigned int k, unsigned char payload);
    virtual unsigned int getType() const;
    virtual void setType(unsigned int type);
    virtual unsigned int getTypeNeighbour() const;
    virtual void setTypeNeighbour(unsigned int TypeNeighbour);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const WiseApplicationPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, WiseApplicationPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef __WISEAPPLICATIONPACKET_M_H

