//
// Generated file, do not edit! Created by nedtool 5.0 from wise/src/node/sensorManager/wiseCameraManager/WiseCameraMessage.msg.
//

#ifndef __WISECAMERAMESSAGE_M_H
#define __WISECAMERAMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
	#include "WiseSensorManagerMessage_m.h"
// }}

/**
 * Class generated from <tt>wise/src/node/sensorManager/wiseCameraManager/WiseCameraMessage.msg:20</tt> by nedtool.
 * <pre>
 * message WiseCameraMessage extends WiseSensorManagerMessage
 * {
 *     string cameraSampleType;
 * }
 * </pre>
 */
class WiseCameraMessage : public ::WiseSensorManagerMessage
{
  protected:
    ::omnetpp::opp_string cameraSampleType;

  private:
    void copy(const WiseCameraMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WiseCameraMessage&);

  public:
    WiseCameraMessage(const char *name=nullptr, int kind=0);
    WiseCameraMessage(const WiseCameraMessage& other);
    virtual ~WiseCameraMessage();
    WiseCameraMessage& operator=(const WiseCameraMessage& other);
    virtual WiseCameraMessage *dup() const {return new WiseCameraMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getCameraSampleType() const;
    virtual void setCameraSampleType(const char * cameraSampleType);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const WiseCameraMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, WiseCameraMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __WISECAMERAMESSAGE_M_H

