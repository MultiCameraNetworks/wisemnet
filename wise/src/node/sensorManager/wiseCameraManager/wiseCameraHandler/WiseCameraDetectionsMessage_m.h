//
// Generated file, do not edit! Created by nedtool 5.0 from wise/src/node/sensorManager/wiseCameraManager/wiseCameraHandler/WiseCameraDetectionsMessage.msg.
//

#ifndef __WISECAMERADETECTIONSMESSAGE_M_H
#define __WISECAMERADETECTIONSMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
	#include "WiseCameraMessage_m.h"
// }}

/**
 * Struct generated from wise/src/node/sensorManager/wiseCameraManager/wiseCameraHandler/WiseCameraDetectionsMessage.msg:20 by nedtool.
 */
struct WiseTargetDetection
{
    WiseTargetDetection();
    unsigned int target_id;
    bool valid;
    unsigned int bb_x_tl;
    unsigned int bb_y_tl;
    unsigned int bb_x_br;
    unsigned int bb_y_br;
    double ext_bb_x_tl;
    double ext_bb_y_tl;
    double ext_bb_x_br;
    double ext_bb_y_br;
    double true_bb_x_tl;
    double true_bb_y_tl;
    double true_bb_x_br;
    double true_bb_y_br;
};

// helpers for local use
void __doPacking(omnetpp::cCommBuffer *b, const WiseTargetDetection& a);
void __doUnpacking(omnetpp::cCommBuffer *b, WiseTargetDetection& a);

inline void doParsimPacking(omnetpp::cCommBuffer *b, const WiseTargetDetection& obj) { __doPacking(b, obj); }
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, WiseTargetDetection& obj) { __doUnpacking(b, obj); }

/**
 * Class generated from <tt>wise/src/node/sensorManager/wiseCameraManager/wiseCameraHandler/WiseCameraDetectionsMessage.msg:40</tt> by nedtool.
 * <pre>
 * message WiseCameraDetectionsMessage extends WiseCameraMessage
 * {
 *     WiseTargetDetection detections[];
 * }
 * </pre>
 */
class WiseCameraDetectionsMessage : public ::WiseCameraMessage
{
  protected:
    WiseTargetDetection *detections; // array ptr
    unsigned int detections_arraysize;

  private:
    void copy(const WiseCameraDetectionsMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WiseCameraDetectionsMessage&);

  public:
    WiseCameraDetectionsMessage(const char *name=nullptr, int kind=0);
    WiseCameraDetectionsMessage(const WiseCameraDetectionsMessage& other);
    virtual ~WiseCameraDetectionsMessage();
    WiseCameraDetectionsMessage& operator=(const WiseCameraDetectionsMessage& other);
    virtual WiseCameraDetectionsMessage *dup() const {return new WiseCameraDetectionsMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual void setDetectionsArraySize(unsigned int size);
    virtual unsigned int getDetectionsArraySize() const;
    virtual WiseTargetDetection& getDetections(unsigned int k);
    virtual const WiseTargetDetection& getDetections(unsigned int k) const {return const_cast<WiseCameraDetectionsMessage*>(this)->getDetections(k);}
    virtual void setDetections(unsigned int k, const WiseTargetDetection& detections);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const WiseCameraDetectionsMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, WiseCameraDetectionsMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __WISECAMERADETECTIONSMESSAGE_M_H

