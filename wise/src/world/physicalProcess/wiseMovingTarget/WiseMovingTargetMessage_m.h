//
// Generated file, do not edit! Created by nedtool 5.0 from wise/src/world/physicalProcess/wiseMovingTarget/WiseMovingTargetMessage.msg.
//

#ifndef __WISEMOVINGTARGETMESSAGE_M_H
#define __WISEMOVINGTARGETMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
        #include "WisePhysicalProcessMessage_m.h"
// }}

/**
 * Struct generated from wise/src/world/physicalProcess/wiseMovingTarget/WiseMovingTargetMessage.msg:20 by nedtool.
 */
struct WiseTargetBoundingBox
{
    WiseTargetBoundingBox();
    double x_tl;
    double y_tl;
    double z_tl;
    double x_br;
    double y_br;
    double z_br;
};

// helpers for local use
void __doPacking(omnetpp::cCommBuffer *b, const WiseTargetBoundingBox& a);
void __doUnpacking(omnetpp::cCommBuffer *b, WiseTargetBoundingBox& a);

inline void doParsimPacking(omnetpp::cCommBuffer *b, const WiseTargetBoundingBox& obj) { __doPacking(b, obj); }
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, WiseTargetBoundingBox& obj) { __doUnpacking(b, obj); }

/**
 * Class generated from <tt>wise/src/world/physicalProcess/wiseMovingTarget/WiseMovingTargetMessage.msg:29</tt> by nedtool.
 * <pre>
 * message WiseMovingTargetMessage extends WisePhysicalProcessMessage
 * {
 *     WiseTargetBoundingBox boundingBox;
 *     unsigned int targetID;
 *     bool visible = true;
 * }
 * </pre>
 */
class WiseMovingTargetMessage : public ::WisePhysicalProcessMessage
{
  protected:
    WiseTargetBoundingBox boundingBox;
    unsigned int targetID;
    bool visible;

  private:
    void copy(const WiseMovingTargetMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WiseMovingTargetMessage&);

  public:
    WiseMovingTargetMessage(const char *name=nullptr, int kind=0);
    WiseMovingTargetMessage(const WiseMovingTargetMessage& other);
    virtual ~WiseMovingTargetMessage();
    WiseMovingTargetMessage& operator=(const WiseMovingTargetMessage& other);
    virtual WiseMovingTargetMessage *dup() const {return new WiseMovingTargetMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual WiseTargetBoundingBox& getBoundingBox();
    virtual const WiseTargetBoundingBox& getBoundingBox() const {return const_cast<WiseMovingTargetMessage*>(this)->getBoundingBox();}
    virtual void setBoundingBox(const WiseTargetBoundingBox& boundingBox);
    virtual unsigned int getTargetID() const;
    virtual void setTargetID(unsigned int targetID);
    virtual bool getVisible() const;
    virtual void setVisible(bool visible);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const WiseMovingTargetMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, WiseMovingTargetMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __WISEMOVINGTARGETMESSAGE_M_H

