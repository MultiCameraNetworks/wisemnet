//
// Generated file, do not edit! Created by nedtool 5.0 from wise/src/world/physicalProcess/WisePhysicalProcessMessage.msg.
//

#ifndef __WISEPHYSICALPROCESSMESSAGE_M_H
#define __WISEPHYSICALPROCESSMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
        #include "PhysicalProcessMessage_m.h"
// }}

/**
 * Class generated from <tt>wise/src/world/physicalProcess/WisePhysicalProcessMessage.msg:20</tt> by nedtool.
 * <pre>
 * message WisePhysicalProcessMessage extends PhysicalProcessMessage
 * {
 *     double zCoor; // chris: not present in PhysicalProcessMessage
 *     unsigned char vec_value[];
 * }
 * </pre>
 */
class WisePhysicalProcessMessage : public ::PhysicalProcessMessage
{
  protected:
    double zCoor;
    unsigned char *vec_value; // array ptr
    unsigned int vec_value_arraysize;

  private:
    void copy(const WisePhysicalProcessMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WisePhysicalProcessMessage&);

  public:
    WisePhysicalProcessMessage(const char *name=nullptr, int kind=0);
    WisePhysicalProcessMessage(const WisePhysicalProcessMessage& other);
    virtual ~WisePhysicalProcessMessage();
    WisePhysicalProcessMessage& operator=(const WisePhysicalProcessMessage& other);
    virtual WisePhysicalProcessMessage *dup() const {return new WisePhysicalProcessMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual double getZCoor() const;
    virtual void setZCoor(double zCoor);
    virtual void setVec_valueArraySize(unsigned int size);
    virtual unsigned int getVec_valueArraySize() const;
    virtual unsigned char getVec_value(unsigned int k) const;
    virtual void setVec_value(unsigned int k, unsigned char vec_value);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const WisePhysicalProcessMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, WisePhysicalProcessMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __WISEPHYSICALPROCESSMESSAGE_M_H

