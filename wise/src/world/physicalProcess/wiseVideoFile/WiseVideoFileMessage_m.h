//
// Generated file, do not edit! Created by nedtool 5.0 from wise/src/world/physicalProcess/wiseVideoFile/WiseVideoFileMessage.msg.
//

#ifndef __WISEVIDEOFILEMESSAGE_M_H
#define __WISEVIDEOFILEMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
        #include "WisePhysicalProcessMessage_m.h"
        #include <opencv.hpp>        
// }}

/**
 * Class generated from <tt>wise/src/world/physicalProcess/wiseVideoFile/WiseVideoFileMessage.msg:22</tt> by nedtool.
 * <pre>
 * message WiseVideoFileMessage extends WisePhysicalProcessMessage
 * {
 *     bool valid;
 *     string fileName;
 *     double frameRateSRC;
 *     double resize;
 *     int curFrame; // index of frame in the videofile
 *     cv::Mat frame; // current frame returned		
 * }
 * </pre>
 */
class WiseVideoFileMessage : public ::WisePhysicalProcessMessage
{
  protected:
    bool valid;
    ::omnetpp::opp_string fileName;
    double frameRateSRC;
    double resize;
    int curFrame;
    cv::Mat frame;

  private:
    void copy(const WiseVideoFileMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WiseVideoFileMessage&);

  public:
    WiseVideoFileMessage(const char *name=nullptr, int kind=0);
    WiseVideoFileMessage(const WiseVideoFileMessage& other);
    virtual ~WiseVideoFileMessage();
    WiseVideoFileMessage& operator=(const WiseVideoFileMessage& other);
    virtual WiseVideoFileMessage *dup() const {return new WiseVideoFileMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual bool getValid() const;
    virtual void setValid(bool valid);
    virtual const char * getFileName() const;
    virtual void setFileName(const char * fileName);
    virtual double getFrameRateSRC() const;
    virtual void setFrameRateSRC(double frameRateSRC);
    virtual double getResize() const;
    virtual void setResize(double resize);
    virtual int getCurFrame() const;
    virtual void setCurFrame(int curFrame);
    virtual cv::Mat& getFrame();
    virtual const cv::Mat& getFrame() const {return const_cast<WiseVideoFileMessage*>(this)->getFrame();}
    virtual void setFrame(const cv::Mat& frame);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const WiseVideoFileMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, WiseVideoFileMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __WISEVIDEOFILEMESSAGE_M_H

