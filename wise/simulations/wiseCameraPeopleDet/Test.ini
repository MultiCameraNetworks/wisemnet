### ------------------------------------------------------------------------ ###
### WiseCameraPeopleDet
### 
### Description: Two-camera demo for people detection & descriptor transmission.
###				 One camera detects people in video and sends data. The other
###				 acts as a sink and receives the data.
### 
###	References:		
###		- Experiments in: 
###			J. SanMiguel & A. Cavallaro, 
###			"Networked Computer Vision: the importance of a holistic simulator", 
###			IEEE COMPUTER 2017 
###			http://ieeexplore.ieee.org/document/XXXX/
###			Copy available at http://www.eecs.qmul.ac.uk/~andrea/wise-mnet.html 			
###
### Date: 2015-06-01 (updated 2017-06-13)
### Author: juancarlos.sanmiguel@uam.es (Universidad Autonoma de Madrid)
### 
### ------------------------------------------------------------------------ ###
[General]
include ../WiseCastalia.ini 	# ALWAYS include the WiseCastalia.ini file

# ==============================================
# Simulation setup
# ==============================================
sim-time-limit = 100s	# simulation duration
repeat = 1

SN.field_x = 160		# meters
SN.field_y = 120		# meters

SN.numNodes = 2	 		# number of camera nodes
SN.deployment = "center"# default camera position

SN.use_calibration = false		   # we do not have calibration for camera nodes

#GUI to visualize an empty terrain (white/black zhenital view with FOVs and moving targets)
SN.TerrainName = "WiseTerrainEmpty"
SN.wiseTerrain.gui = "opencv"			#type of GUI (current version only supports "opencv")
SN.wiseTerrain.gui_wait_start = false 	#press-key to start simulation
SN.wiseTerrain.gui_show = true		  	#shows a cenital view of the network & moving targets
SN.wiseTerrain.draw_trajectory = false  #shows trajectories of moving targets

# ==============================================
# Communication: Wireless Channel
# ==============================================
SN.dummy_communication = true 			#'false'=enable the wireless communication pipeline 
SN.dummyChannel.collectTraceInfo = true	#enable trace log information in "wise-trace.txt"

### Ideal wireless channel (unit disk model)
SN.wirelessChannel.sigma = 0
SN.wirelessChannel.bidirectionalSigma = 0
SN.wirelessChannel.PLd0 = -172

# ==============================================
# Physical Process (environment's events) 
# ==============================================
SN.numPhysicalProcesses = 1	#number of camera sensors (i.e. video files captured by each node)
SN.physicalProcessName = "WiseVideoFile"

#if frame_rate = -1, the source frame_rate is employed
SN.physicalProcess[**].frame_rate = -1
SN.physicalProcess[**].move_later = 0
SN.physicalProcess[**].resize = 1
SN.physicalProcess[**].show_video = false
 
SN.physicalProcess[0].file_name = "../../../videos/AVSS07/AVSS_AB_Hard_Divx.avi" #data captured by camera '0'

# ==============================================
# Node: Application 
# ==============================================
SN.node[**].ApplicationName = "WiseCameraPeopleDet"
SN.node[**].Application.testName = "Test"
SN.node[**].Application.show_results = false
SN.node[**].Application.neighbourDiscoverFOV = false
SN.node[**].Application.neighbourDiscoverCOM = true
SN.node[**].Application.collectTraceInfo = true
#SN.node[**].Application.sampling_time = 1/8
#SN.node[**].Application.sensing_mode = "periodic"
SN.node[**].Application.sensing_mode = "REAL_DEMAND"
SN.node[1].Application.isSink = true

# ==============================================
# Node: Sensor Manager
# ==============================================
SN.node[**].SensorManagerName = "WiseCameraManager"
SN.node[**].SensorManager.type_src = "Video"

# ==============================================
# Node: Resource Managers (cpu, memory, energy)
# ==============================================
### Note: 'sigmaCPUClockDrift = 0' means NO drift (ideal)
SN.node[**].ResourceManager.sigmaCPUClockDrift = 0.0
SN.node[**].ResourceManager.CPUmodel = "../../../models/CPU/CPU_ARM-Cortex-A9.dat"    
SN.node[**].ResourceManager.SENmodel = "../../../models/SEN/SEN_B3.dat"
SN.node[**].ResourceManager.COMmodel = "../../../models/COM/CC2420.txt"
 
# ==============================================
# Node:Communication: Radio (Physical Layer)
# ==============================================
### Ideal radio parameters... 
SN.node[**].Communication.Radio.RadioParametersFile = "../../../models/COM/CC2420.txt"
SN.node[**].Communication.Radio.mode = "IDEAL"
SN.node[**].Communication.Radio.collisionModel = 2  # 0:None  1:Simplistic  2:Additive
SN.node[**].Communication.Radio.maxPhyFrameSize = 0 # no limits
SN.node[**].Communication.Radio.phyFrameOverhead = 0 
 
# ==============================================
# Node:Communication: MAC (Datalink Layer)
# ==============================================
### MAC without overhaead (ideal)
SN.node[**].Communication.MAC.macPacketOverhead = 0

#SN.node[**].Communication.MACProtocolName = "TunableMAC"
#SN.node[**].Communication.MAC.randomTxOffset = 0
#SN.node[**].Communication.MAC.numTx = 1

#### S-MAC configuration of T-MAC
#SN.node[**].Communication.MACProtocolName = "TMAC"
#SN.node[**].Communication.MAC.listenTimeout = 61
#SN.node[**].Communication.MAC.disableTAextension = true
#SN.node[**].Communication.MAC.conservativeTA = false
#SN.node[**].Communication.MAC.collisionResolution = 0

### My configuration for T-MAC
SN.node[**].Communication.MACProtocolName = "TMAC"
SN.node[**].Communication.MAC.maxTxRetries = 10
SN.node[**].Communication.MAC.allowSinkSync = false

# ==============================================
# Node: Communication: Routing (Network Layer)
# ==============================================
### Routing without overhaead (ideal)
SN.node[**].Communication.Routing.netDataFrameOverhead = 0
SN.node[**].Communication.**.collectTraceInfo = true

# ==================================================
# SPECIFIC TESTS (extending options under [General])
# ==================================================
#basic functionality
[Config basic]
SN.node[**].ResourceManager.CPUfreq = .5e9
SN.node[**].ResourceManager.SENfreq = 24e6
SN.node[**].Application.sampling_time = 1/10

#change of operation frequency of image sensor
[Config sensing]
SN.node[**].ResourceManager.CPUfreq = .5e9
SN.node[**].ResourceManager.SENfreq = ${fsen=10e6,12e6,14e6,16e6,18e6,20e6,22e6,24e6}
SN.node[**].Application.sampling_time = 1/10

#change of operation frequency of processor
[Config processing]
SN.node[**].ResourceManager.CPUfreq = ${fcpu=2.5e8, 5e8, 7.5e8, 1e9, 1.25e9, 1.5e9}
SN.node[**].ResourceManager.SENfreq = 24e6
SN.node[**].Application.sampling_time = 1/10

#change of sampling frequency for image sensor
[Config sampling]
SN.node[**].ResourceManager.CPUfreq = .5e9
SN.node[**].ResourceManager.SENfreq = 24e6
SN.node[**].Application.sampling_time = ${sr=1, 1/5, 1/10, 1/15, 1/20, 1/25}