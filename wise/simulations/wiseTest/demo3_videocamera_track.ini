### ------------------------------------------------------------------------ ###
### demo3_videocamera: 
### 
### Description: demo for processing & visualization using OpenCV
###
### Available sub-configurations: none
###
### Date: 2017-09-11
### Author: juancarlos.sanmiguel@uam.es (Universidad Autonoma de Madrid)
### 
### ------------------------------------------------------------------------ ###
[General]
include ../WiseCastalia.ini 	# ALWAYS include the WiseCastalia.ini file

# ==============================================
# Simulation setup
# ==============================================
sim-time-limit = 30s	# simulation duration
#sim-time-limit = ${ti=30s,20s,10s} #uncomment to run experiments 

SN.field_x = 160	# meters
SN.field_y = 120	# meters

SN.numNodes = 1		# number of camera nodes (i.e. available views)
SN.deployment = "center"
SN.use_calibration = false			#flag to indicate if the scenario contains calibration data

#GUI to visualize an empty terrain (white/black zhenital view with FOVs and moving targets)
SN.TerrainName = "WiseTerrainEmpty"
SN.wiseTerrain.gui = "opencv"			#type of GUI (current version only supports "opencv")
SN.wiseTerrain.gui_wait_start = false 	#press-key to start simulation
SN.wiseTerrain.gui_show = false		  	#shows a cenital view of the network & moving targets

# ==============================================
# Communication: Wireless Channel
# ==============================================
SN.dummy_communication = true 			#'false'=enable the wireless communication pipeline 
SN.dummyChannel.collectTraceInfo = true	#enable trace log information in "wise-trace.txt"

### Ideal wireless channel (unit disk model)
SN.wirelessChannel.sigma = 0
SN.wirelessChannel.bidirectionalSigma = 0
SN.wirelessChannel.PLd0 = -172

# ==============================================
# Physical Process (environment's events) 
# ==============================================
SN.numPhysicalProcesses = 1 				#number of camera sensors (i.e. video files captured by each node)
SN.physicalProcessName = "WiseVideoFile"	#type of sensor (video file)
SN.physicalProcess[**].frame_rate = -1 		#if frame_rate = -1, the source frame_rate is employed
SN.physicalProcess[**].resize = -1			#if resize = -1, the source resolution is employed
#SN.physicalProcess[**].show_video = false	#flag to show input video (use 'true' for debug purposes)
#SN.physicalProcess[0].show_video = true	#flag to show input video (use 'true' for debug purposes)

# ==============================================
# Node: Application 
# ==============================================
SN.node[**].ApplicationName = "WiseCameraPeriodicAppTracker"	#application type
SN.node[**].Application.applicationID = "demo3_videocamera_track"		#application name
SN.node[**].Application.neighborDiscoverCOM = false			#discovery of network cameras using communications	
SN.node[**].Application.neighborDiscoverFOVoverlap = false	#discovery of network cameras using FOV spatial overlap
SN.node[**].Application.collectTraceInfo = true				#enable trace log information in "wise-trace.txt"
SN.node[**].Application.fullConnectivityCOM = true			#camera nodes are fully connected (i.e. wired network)
SN.node[**].Application.sampling_time = 1/25				# no missed frames if "IDEAL" sensing_mode is selected

#SN.node[**].Application.sensing_mode = "REAL_PERIOD" 	#frames captured each 'sampling_time', considers processing time
#SN.node[**].Application.sensing_mode = "REAL_DEMAND" 	#frames captured after processing, considers processing time
SN.node[**].Application.sensing_mode = "IDEAL"			#frames captured each 'sampling_time', does not consider processing time

# ==============================================
# Node: Sensor Manager
# ==============================================
SN.node[**].SensorManagerName = "WiseCameraManager"
SN.node[**].SensorManager.fov_type = "real"
SN.node[**].SensorManager.calib_filename = "none"

# ==============================================
# Node: Resource Managers (cpu, memory, energy)
# ==============================================
### Note: 'sigmaCPUClockDrift = 0' means NO drift (ideal)
SN.node[**].ResourceManager.sigmaCPUClockDrift = 0.0
SN.node[**].ResourceManager.CPUmodel = "../../../models/CPU/CPU_ARM-Cortex-A9.dat"    
SN.node[**].ResourceManager.SENmodel = "../../../models/SEN/SEN_B3.dat"
SN.node[**].ResourceManager.COMmodel = "../../../models/COM/CC2420.txt"
SN.node[**].ResourceManager.CPUfreq = 1.5e9
SN.node[**].ResourceManager.SENfreq = 24e6
SN.node[**].ResourceManager.initialEnergy = 1000
SN.node[**].ResourceManager.optimizationFactor = 4

# ==============================================
# Node: Communication: Radio (Physical Layer)
# ==============================================
### Ideal radio parameters... 
SN.node[**].Communication.Radio.RadioParametersFile = "../../../models/COM/CC2420.txt"
SN.node[**].Communication.Radio.mode = "IDEAL"
SN.node[**].Communication.Radio.collisionModel = 0  # 0:None  1:Simplistic  2:Additive
SN.node[**].Communication.Radio.maxPhyFrameSize = 0 # no limits
SN.node[**].Communication.Radio.phyFrameOverhead = 0 
 
# ==============================================
# Node: Communication: MAC (Datalink Layer)
# ==============================================
SN.node[**].Communication.MAC.macPacketOverhead = 0 # MAC without overhaead (ideal)

#SN.node[**].Communication.MACProtocolName = "TunableMAC"
#SN.node[**].Communication.MAC.randomTxOffset = 0
#SN.node[**].Communication.MAC.numTx = 1

#### S-MAC configuration of T-MAC
#SN.node[**].Communication.MACProtocolName = "TMAC"
#SN.node[**].Communication.MAC.listenTimeout = 61
#SN.node[**].Communication.MAC.disableTAextension = true
#SN.node[**].Communication.MAC.conservativeTA = false
#SN.node[**].Communication.MAC.collisionResolution = 0

### My configuration for T-MAC
SN.node[**].Communication.MACProtocolName = "TMAC"
SN.node[**].Communication.MAC.maxTxRetries = 10
SN.node[**].Communication.MAC.allowSinkSync = false

# ==============================================
# Node: Communication: Routing (Network Layer)
# ==============================================
### Routing without overhaead (ideal)
SN.node[**].Communication.Routing.netDataFrameOverhead = 0
SN.node[**].Communication.**.collectTraceInfo = true


[Config vot17_basketball]
SN.physicalProcess[0].file_name = "../../../videos/vot2017/basketball/%08d.jpg" #filename for video data captured by camera 0
SN.node[0].Application.formatGT = "VOT"					#ground-truth format (see descriptions in WiseGTreader.cc)
SN.node[0].Application.filenameGT = "../../../videos/vot2017/basketball/groundtruth.txt" #ground-truth detections associated to camera 0

[Config vot17_car1]
SN.physicalProcess[0].file_name = "../../../videos/vot2017/car1/%08d.jpg" #filename for video data captured by camera 0
SN.node[0].Application.formatGT = "VOT"					#ground-truth format (see descriptions in WiseGTreader.cc)
SN.node[0].Application.filenameGT = "../../../videos/vot2017/car1/groundtruth.txt" #ground-truth detections associated to camera 0

[Config vot17_traffic]
SN.physicalProcess[0].file_name = "../../../videos/vot2017/traffic/%08d.jpg" #filename for video data captured by camera 0
SN.node[0].Application.formatGT = "VOT"					#ground-truth format (see descriptions in WiseGTreader.cc)
SN.node[0].Application.filenameGT = "../../../videos/vot2017/traffic/groundtruth.txt" #ground-truth detections associated to camera 0