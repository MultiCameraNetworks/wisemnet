### ------------------------------------------------------------------------ ###
### Test_simple: 
### 
### Description: demo to send packets to network, receive data and perform sensor readings
###
### Available sub-configurations: none		 
###
### Date: 2011-10-01 (updated 2017-09-07)
###
### Original Author: Christian Nastasi (nastasichr@gmail.com)
### Author: juancarlos.sanmiguel@uam.es (Universidad Autonoma de Madrid)
### 
### ------------------------------------------------------------------------ ###
[General]
include ../WiseCastalia.ini 	# ALWAYS include the WiseCastalia.ini file

# ==============================================
# Simulation setup
# ==============================================
sim-time-limit = 100s
SN.field_x = 4		# meters
SN.field_y = 3		# meters
SN.numNodes = 3 
SN.numPhysicalProcesses = 3
SN.deployment = "randomized_4x4"

SN.dummy_communication = true
SN.dummyChannel.collectTraceInfo = true

# ==============================================
# Physical Process (environment's events) 
# ==============================================
SN.physicalProcessName = "WiseMovingTarget"

# ==============================================
# Resource Manager (cpu, memory, energy)
# ==============================================
### No CPU clock drift (ideal)
SN.node[**].ResourceManager.sigmaCPUClockDrift = 0

# ==============================================
# Application 
# ==============================================
SN.node[**].ApplicationName = "WiseBaseAppTest"
SN.node[**].Application.collectTraceInfo = true

# ==============================================
# Sensor Manager
# ==============================================
SN.node[**].SensorManagerName = "WiseEmptySensorManager"

# ==============================================
# Communication: Wireless Channel
# ==============================================
### Ideal wireless channel (unit disk model)
SN.wirelessChannel.sigma = 0
SN.wirelessChannel.bidirectionalSigma = 0
SN.wirelessChannel.PLd0 = -172

# ==============================================
# Communication: Radio (Physical Layer)
# ==============================================
### Ideal radio parameters... 
SN.node[**].Communication.Radio.RadioParametersFile =  "../../../models/COM/CC2420.txt"
SN.node[**].Communication.Radio.mode = "IDEAL"
SN.node[**].Communication.Radio.collisionModel = 0
SN.node[**].Communication.Radio.TxOutputPower = "0dBm"
SN.node[**].Communication.Radio.maxPhyFrameSize = 0 	# no limits
SN.node[**].Communication.Radio.phyFrameOverhead = 0 
SN.node[**].Communication.Radio.collectTraceInfo = true

# ==============================================
# Communication: MAC (Datalink Layer)
# ==============================================
#SN.node[**].Communication.MACProtocolName = "BypassMAC"
### MAC without overhaead (ideal)
SN.node[**].Communication.MAC.macPacketOverhead = 0
SN.node[**].Communication.MACProtocolName = "TunableMAC"

# =======*=======================================
# Communi*cation: Routing (Network Layer)
# =======*=======================================
#SN.node[**].Communication.RoutingProtocolName = "BypassRouting"
### Routing without overhaead (ideal)
SN.node[**].Communication.Routing.netDataFrameOverhead = 0
