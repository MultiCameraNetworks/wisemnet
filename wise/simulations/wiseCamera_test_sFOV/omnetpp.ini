[General]

### ------------------------------------------------------------------------ ###
### WiseCameraTest_sFOV: 
### 
### Description: test for detecting moving targets within squared FOVs of cameras
###
### Date: 2011-09-01 (updated 2017-07-10)
### Original Author: Christian Nastasi (nastasichr@gmail.com)
### Author: juancarlos.sanmiguel@uam.es (Universidad Autonoma de Madrid)
### 
### ------------------------------------------------------------------------ ###

include ../WiseCastalia.ini 	# ALWAYS include the WiseCastalia.ini file

# ==============================================
# Simulation setup
# ==============================================
sim-time-limit = 200s	# simulation duration
SN.field_x = 400		# meters
SN.field_y = 400		# meters
SN.numNodes = 12		# number of camera nodes
SN.deployment = "randomized_4x4" #position of cameras
#SN.deployment = "center"
#SN.deployment = "4x4"

SN.use_calibration = false		   #we do not have calibration for camera nodes

#GUI to visualize an empty terrain (white/black zhenital view with FOVs and moving targets)
SN.TerrainName = "WiseTerrainEmpty"
SN.wiseTerrain.gui = "opencv"			#type of GUI (current version only supports "opencv")
SN.wiseTerrain.gui_wait_start = false 	#press-key to start simulation
SN.wiseTerrain.gui_show = true		  	#shows a cenital view of the network & moving targets
SN.wiseTerrain.draw_trajectory = false  #shows trajectories of moving targets
SN.wiseTerrain.scale_factor = 2  		#factor to increase (>1) or decrease (<1) the GUI size

# ==============================================
# Communication: Wireless Channel
# ==============================================
SN.dummy_communication = false 			#'true'=enable the wireless communication pipeline 
SN.dummyChannel.collectTraceInfo = true	#enable trace log information in "wise-trace.txt"

### Ideal wireless channel (unit disk model)
SN.wirelessChannel.sigma = 0
SN.wirelessChannel.bidirectionalSigma = 0
SN.wirelessChannel.PLd0 = -172

# ==============================================
# Physical Process (environment's events) 
# ==============================================
SN.numPhysicalProcesses = 3						#number of targets
SN.physicalProcessName = "WiseMovingTarget" 	#type of target (moving targets as 'squares')

SN.physicalProcess[**].bb_width = 10			#default bounding box width for all targets (in pixels)
SN.physicalProcess[**].bb_height = 10  			#default bounding box height for all targets (in pixels)
SN.physicalProcess[**].update_time = 2			#default updated frequency for all targets (in seconds)
SN.physicalProcess[**].noise = 2				#default noise for motion for all targets (in pixels)

SN.physicalProcess[0].x_init = 80				#initial X-position for target '0' (in pixels)
SN.physicalProcess[0].y_init = 60				#initial Y-position for target '0' (in pixels)
SN.physicalProcess[0].move_type = "lin_random"	#motion pattern for target '0'
SN.physicalProcess[1].x_init = 12.00			#initial X-position for target '1' (in pixels)
SN.physicalProcess[1].y_init = 60.00			#initial Y-position for target '1' (in pixels)
SN.physicalProcess[1].move_type = "lin_noise"	#motion pattern for target '1'
SN.physicalProcess[2].x_init = 103.00			#initial X-position for target '2' (in pixels)
SN.physicalProcess[2].y_init = 103.00			#initial Y-position for target '2' (in pixels)
SN.physicalProcess[2].move_type = "lincirc_noise"#motion pattern for target '2'

# ==============================================
# Node: Resource Manager (cpu, memory, energy)
# ==============================================
SN.node[**].ResourceManager.sigmaCPUClockDrift = 0 #No CPU clock drift (ideal)

# ==============================================
# Node: Application 
# ==============================================
SN.node[**].ApplicationName = "WiseCameraAppTest"	#application running within each camera node
SN.node[**].Application.neighbourDiscoverCOM = true #discovery of network cameras using communications
SN.node[**].Application.collectTraceInfo = true		#enable trace log information in "wise-trace.txt"

# ==============================================
# Node: Sensor Manager
# ==============================================
SN.node[**].SensorManagerName = "WiseCameraManager" #sensor available (i.e. camera)
SN.node[**].SensorManager.fov_type = "bounding_box" #type of Field of View (FOV)
SN.node[**].SensorManager.fov_bb_width = 100
SN.node[**].SensorManager.fov_bb_height = 100
SN.node[**].SensorManager.collectTraceInfo = true	#enable trace log information in "wise-trace.txt"

# ==============================================
# Node: Communication: Radio (Physical Layer)
# ==============================================
### Ideal radio parameters... (see Castalia's manual for further descriptions)
SN.node[**].Communication.Radio.RadioParametersFile = "../../../models/COM/CC2420.txt" #file describing radio capabilities
SN.node[**].Communication.Radio.mode = "IDEAL"		#IDEAL means no collisions and no associated delays for changing the radio states	
SN.node[**].Communication.Radio.collisionModel = 0
SN.node[**].Communication.Radio.TxOutputPower = "0dBm"
SN.node[**].Communication.Radio.maxPhyFrameSize = 0 	# no limits
SN.node[**].Communication.Radio.phyFrameOverhead = 0 

# ==============================================
# Node: Communication: MAC (Datalink Layer)
# ==============================================
### Ideal parameters... (see Castalia's manual for further descriptions)
SN.node[**].Communication.MAC.macPacketOverhead = 0 #MAC without overhaead (ideal)
SN.node[**].Communication.MACProtocolName = "TunableMAC"
#SN.node[**].Communication.MACProtocolName = "BypassMAC"

# ==============================================
# Node: Communication: Routing (Network Layer)
# ==============================================
### Ideal parameters... (see Castalia's manual for further descriptions)
#SN.node[**].Communication.RoutingProtocolName = "BypassRouting"
SN.node[**].Communication.Routing.netDataFrameOverhead = 0 #Routing without overhaead (ideal)