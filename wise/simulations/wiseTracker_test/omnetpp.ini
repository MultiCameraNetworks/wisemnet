# ####################################################### #
# Description: this was generated with "make_scenario.py" #
#              you can adapt it to your scenario          #
# ####################################################### #

[General]
include ../WiseCastalia.ini  # ALWAYS include WiseCastalia.ini

sim-time-limit =  360000s
# ==============================================
# Sensor Network setup
# ==============================================
SN.field_x = 160                   # meters
SN.field_y = 120                   # meters
#SN.numNodes = 4
SN.numNodes = 2                         

SN.use_calibration = false		   # we do not have calibration for camera nodes

#GUI to visualize an empty terrain (white/black zhenital view with FOVs and moving targets)
SN.TerrainName = "WiseTerrainEmpty"
SN.wiseTerrain.gui = "opencv"			#type of GUI (current version only supports "opencv")
SN.wiseTerrain.gui_wait_start = false 	#press-key to start simulation
SN.wiseTerrain.gui_show = true		  	#shows a cenital view of the network & moving targets
SN.wiseTerrain.draw_trajectory = false  #shows trajectories of moving targets

SN.dummy_communication = true    # uncomment for dummy communication

# ==============================================
# Physical Processes (environment's events) 
# ==============================================
SN.numPhysicalProcesses = 1             

SN.physicalProcessName = "WiseMovingTarget"
# --- 
SN.physicalProcess[**].bb_width = 10.00
SN.physicalProcess[**].bb_height = 10.00
#SN.physicalProcess[**].move_min_x = 61
#SN.physicalProcess[**].move_max_x = 105
#SN.physicalProcess[**].move_min_y = 41
#SN.physicalProcess[**].move_max_y = 85

SN.physicalProcess[0].x_init = 80.00
SN.physicalProcess[0].y_init = 60.00
#SN.physicalProcess[0].update_time = 20.00
SN.physicalProcess[0].update_time = 1.00
SN.physicalProcess[0].move_type = "lin_random"
#SN.physicalProcess[0].move_later = 60
SN.physicalProcess[0].move_later = 30
SN.physicalProcess[0].noise = 0.5

SN.physicalProcess[1].x_init = 100.00
SN.physicalProcess[1].y_init = 80.00
SN.physicalProcess[1].update_time = 10.00
SN.physicalProcess[1].move_type = "lin_noise"
SN.physicalProcess[1].move_later = 60
SN.physicalProcess[1].noise = 0.5

# ==============================================
# Nodes  
# ==============================================
SN.node[0].xCoor = 50.00
SN.node[0].yCoor = 50.00
SN.node[0].zCoor = 5.00
SN.node[0].phi = 0.00
SN.node[0].theta = 0.00
#SN.node[1].xCoor = 80.00
#SN.node[1].yCoor = 51.00
#SN.node[1].zCoor = 0.00
#SN.node[1].phi = 0.00
#SN.node[1].theta = 0.00
#SN.node[2].xCoor = 65.00
#SN.node[2].yCoor = 80.00
#SN.node[2].zCoor = 0.00
#SN.node[2].phi = 0.00
#SN.node[2].theta = 0.00
#SN.node[3].xCoor = 150.00    # Node 1 looses and node 3 finds at the same time
SN.node[3].xCoor = 160.00    # Node 1 losses and node 3 finds after a while
#SN.node[3].xCoor = 142.00    # Node 1 loses and node 3 had found already 
SN.node[3].yCoor = 50.00     
SN.node[3].zCoor = 0.00
SN.node[3].phi = 0.00
SN.node[3].theta = 0.00

SN.node[1].xCoor = 160.00    # Node 1 losses and node 3 finds after a while
#SN.node[3].xCoor = 142.00    # Node 1 loses and node 3 had found already 
SN.node[1].yCoor = 50.00     
SN.node[1].zCoor = 0.00
SN.node[1].phi = 0.00
SN.node[1].theta = 0.00



# ==============================================
# Applications 
# ==============================================
SN.node[**].ApplicationName = "WiseCameraTrackerTest"
SN.node[**].Application.collectTraceInfo = true
SN.node[**].Application.neighbourDiscover = true
SN.node[**].Application.sampling_time = 5
SN.node[**].Application.some_parameter = 123

# ==============================================
# Sensor Managers
# ==============================================
SN.node[**].SensorManagerName = "WiseCameraManager"
SN.node[**].SensorManager.fov_type = "bounding_box"
SN.node[**].SensorManager.fov_bb_width = 60.000000
SN.node[**].SensorManager.fov_bb_height = 60.000000
SN.node[**].SensorManager.collectTraceInfo = false

# ==============================================
# Resource Managers (cpu, memory, energy)
# ==============================================
### Note: 'sigmaCPUClockDrift = 0' means NO drift (ideal)
SN.node[**].ResourceManager.sigmaCPUClockDrift = 0.000000

# ==============================================
# Communication: DUMMY Wireless Channel (if used)
# ==============================================
SN.dummyChannel.collectTraceInfo = false
 
# ==============================================
# Communication: Wireless Channel
# ==============================================
### Ideal wireless channel (unit disk model)
SN.wirelessChannel.sigma = 0
SN.wirelessChannel.bidirectionalSigma = 0
SN.wirelessChannel.PLd0 = -172
SN.wirelessChannel.collectTraceInfo = false
 
# ==============================================
# Communication: Radio (Physical Layer)
# ==============================================
### Ideal radio parameters... 
SN.node[**].Communication.Radio.RadioParametersFile = "../../../models/COM/CC2420.txt"
SN.node[**].Communication.Radio.mode = "IDEAL"
SN.node[**].Communication.Radio.collisionModel = 2  # 0:None  1:Simplistic  2:Additive
SN.node[**].Communication.Radio.maxPhyFrameSize = 0 # no limits
SN.node[**].Communication.Radio.phyFrameOverhead = 0 
 
# ==============================================
# Communication: MAC (Datalink Layer)
# ==============================================
### MAC without overhaead (ideal)
SN.node[**].Communication.MAC.macPacketOverhead = 0
SN.node[**].Communication.MACProtocolName = "TunableMAC"
 
# ==============================================
# Communication: Routing (Network Layer)
# ==============================================
### Routing without overhaead (ideal)
SN.node[**].Communication.Routing.netDataFrameOverhead = 0
SN.node[**].Communication.**.collectTraceInfo = false
