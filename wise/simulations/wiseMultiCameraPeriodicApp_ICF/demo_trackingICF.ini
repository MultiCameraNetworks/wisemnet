### ------------------------------------------------------------------------ ###
### WiseMultiCameraPeriodicApp_ICF 
### 
### Description: multi-camera tracking for a single moving target using ICF algorithm.
###				 Simulated scenario with (ideal and real) resource usage and communications
### 
### Available simulations extending the configuration in [General]:none
###
###	References:	
###		- ICF algorithm: 
###			Kamal et al, "Information Weighted Consensus Filters and Their Application 
###			in Distributed Camera Networks", IEEE TAC 2013 
###			http://ieeexplore.ieee.org/document/6576197/ 
###		
### Please cite the following reference when publishing results obtained with WiseMnet:
###   J. SanMiguel & A. Cavallaro,
###   "Networked Computer Vision: the importance of a holistic simulator",
###   IEEE Computer, 50(7):35-43, Jul 2017, http://ieeexplore.ieee.org/document/7971873/		
###
### Date: 2015-06-01 (updated 2017-09-12)
### Author: juancarlos.sanmiguel@uam.es (Universidad Autonoma de Madrid)
### 
### ------------------------------------------------------------------------ ###
[General]
include ../WiseCastalia.ini  # ALWAYS include WiseCastalia.ini
repeat = 1
sim-time-limit = 100s

# ==============================================
# Sensor Network setup
# ==============================================
SN.field_x = 500                   # meters
SN.field_y = 500                   # meters
SN.numNodes = 8					   # number of available nodes/cameras

SN.deployment = ""				   # custom deployment
SN.use_calibration = false		   # we do not have calibration for camera nodes

#GUI to visualize an empty terrain (white/black zhenital view with FOVs and moving targets)
SN.TerrainName = "WiseTerrainEmpty"
SN.wiseTerrain.gui = "opencv"			#type of GUI (current version only supports "opencv")
SN.wiseTerrain.gui_wait_start = false 	#press any key to start simulation
SN.wiseTerrain.gui_show = true		  	#shows a cenital view of the network & moving targets
SN.wiseTerrain.draw_trajectory = true   #shows trajectories of moving targets
SN.wiseTerrain.scale_world = 2			#scale the visualization of the terrain

# ==============================================
# Communication: Wireless Channel
# ==============================================
SN.dummy_communication = true 			#'false'=enable the wireless communication pipeline 
SN.dummyChannel.collectTraceInfo = true	#enable trace log information in "wise-trace.txt"

### Ideal wireless channel (unit disk model)
SN.wirelessChannel.sigma = 0
SN.wirelessChannel.bidirectionalSigma = 0
SN.wirelessChannel.PLd0 = -172

# ==============================================
# Physical Processes (environment's events) 
# ==============================================
SN.numPhysicalProcesses = 1				#number of sensed data (i.e. moving targets)
SN.physicalProcessName = "WiseMovingTarget"
SN.physicalProcess[**].unique_color = true

SN.physicalProcess[**].bb_width = 10.00
SN.physicalProcess[**].bb_height = 10.00
SN.physicalProcess[**].move_min_x = 75
SN.physicalProcess[**].move_max_x = 400
SN.physicalProcess[**].move_min_y = 75
SN.physicalProcess[**].move_max_y = 400
SN.physicalProcess[**].noise_max = 20
SN.physicalProcess[**].noise_min = 10
SN.physicalProcess[**].log_enabled = false
SN.physicalProcess[**].collectTraceInfo = false

SN.physicalProcess[**].move_type = "lin_noise"
SN.physicalProcess[**].move_later = 0
SN.physicalProcess[**].noise = 10
SN.physicalProcess[**].update_time = 0.25
SN.physicalProcess[**].random_init = false

SN.physicalProcess[0].x_init = 120
SN.physicalProcess[0].y_init = 100

# ==============================================
# Node: Applications 
# ==============================================
SN.node[**].ApplicationName = "WiseMultiCameraPeriodicApp_ICF"
SN.node[**].Application.collectNetworkStats = false
SN.node[**].Application.collectPowerStats = false
SN.node[**].Application.collectAccuracyStats = true
SN.node[**].Application.collectTraceInfo = true

# if set to 'false', the processing starts at time=0 (as discovering FOV neighbours is done instantly)
# if set to 'true', there is delay to discover the Comms neighbours (different for each node)
SN.node[**].Application.neighborDiscoverFOVoverlap = false
SN.node[**].Application.neighborDiscoverCOM = false
SN.node[**].Application.latencyNeighborDiscoverCOM = 0.5

#ICF parameters
#SN.node[**].Application.share="FOV"
SN.node[**].Application.share="COM"
SN.node[**].Application.procNoiseCov = 5
SN.node[**].Application.measNoiseCov = 5
SN.node[**].Application.iter_max = 10
SN.node[**].Application.alpha = 0.3

#frequency to process new samples
SN.node[**].Application.sampling_time = 0.25 #

#select cameras to be displayed
SN.node[1].Application.displayStats = true
SN.node[3].Application.displayStats = true
SN.node[**].Application.pause_execution = true
SN.node[**].Application.pause_executionID = 1 #-1 for all

# ==============================================
# Node: Sensor Managers & FOV
# ==============================================
SN.node[**].zCoor = 0.00
SN.node[**].phi = 0.00
SN.node[**].theta = 0.00

SN.node[**].SensorManager.fov_type = "directional"
SN.node[**].SensorManager.fov_di_dov = 250
SN.node[**].SensorManager.fov_di_aov = 30

SN.node[**].SensorManagerName = "WiseCameraManager"
SN.node[**].SensorManager.collectTraceInfo = false

SN.node[0].xCoor = 25
SN.node[0].yCoor = 25
SN.node[0].SensorManager.fov_di_los = 45
SN.node[0].Application.manualConnectivityCOM = "1 1 0 0 0 0 0 1"

SN.node[1].xCoor = 250
SN.node[1].yCoor = 25
SN.node[1].SensorManager.fov_di_los = 90
SN.node[1].Application.manualConnectivityCOM = "1 1 1 0 0 0 0 0"

SN.node[2].xCoor = 475
SN.node[2].yCoor = 25
SN.node[2].SensorManager.fov_di_los = 135
SN.node[2].Application.manualConnectivityCOM = "0 1 1 1 0 0 0 0"

SN.node[3].xCoor = 475
SN.node[3].yCoor = 250
SN.node[3].SensorManager.fov_di_los = 180
SN.node[3].Application.manualConnectivityCOM = "0 0 1 1 1 0 0 0"

SN.node[4].xCoor = 475
SN.node[4].yCoor = 475
SN.node[4].SensorManager.fov_di_los = 225
SN.node[4].Application.manualConnectivityCOM = "0 0 0 1 1 1 0 0"

SN.node[5].xCoor = 250
SN.node[5].yCoor = 475
SN.node[5].SensorManager.fov_di_los = 270
SN.node[5].Application.manualConnectivityCOM = "0 0 0 0 1 1 1 0"

SN.node[6].xCoor = 25
SN.node[6].yCoor = 475
SN.node[6].SensorManager.fov_di_los = 315
SN.node[6].Application.manualConnectivityCOM = "0 0 0 0 0 1 1 1"

SN.node[7].xCoor = 25
SN.node[7].yCoor = 250
SN.node[7].SensorManager.fov_di_los = 360
SN.node[7].Application.manualConnectivityCOM = "1 0 0 0 0 0 1 1"

# ==============================================
# Node: Resource Managers (cpu, memory, energy)
# ==============================================
### Note: 'sigmaCPUClockDrift = 0' means NO drift (ideal)
SN.node[**].ResourceManager.sigmaCPUClockDrift = 0.000000
SN.node[**].ResourceManager.initialEnergy = 1e4
SN.node[**].ResourceManager.CPUfreq = 1.5e9
SN.node[**].ResourceManager.optimizationFactor = 1

# ==============================================
# Node: Communication: Radio (Physical Layer)
# ==============================================
### Ideal radio parameters... 
SN.node[**].Communication.Radio.RadioParametersFile = "../../../models/COM/CC2420.txt"
SN.node[**].Communication.Radio.mode = "IDEAL"
SN.node[**].Communication.Radio.collisionModel = 0  # 0:None  1:Simplistic  2:Additive
SN.node[**].Communication.Radio.maxPhyFrameSize = 1024 # in bytes (0 value means no limits)
SN.node[**].Communication.Radio.phyFrameOverhead = 6 # in bytes (802.15.4. = 6 bytes)
SN.node[**].Communication.Radio.bufferSize = 16 #in number of frames
SN.node[**].Communication.Radio.TxOutputPower = "0dBm"
SN.node[**].Communication.Radio.collectTraceInfo = false
SN.node[**].Communication.Radio.module-eventlog-recording = true #flag to activate an extended recording of "radio" events
 
# ==============================================
# Node: Communication: MAC (Datalink Layer)
# ==============================================
### MAC without overhaead (ideal)
SN.node[**].Communication.MACProtocolName = "TMAC"
SN.node[**].Communication.MAC.macPacketOverhead = 0
SN.node[**].Communication.MAC.maxTxRetries = 20			#number of retries when TX failures (IMPORTANT!! when camera saturate bandwidth)
SN.node[**].Communication.MAC.allowSinkSync = false

#settings to speed up communication reponse for ICF using one target (MODIFY WITH CAUTION!!)
SN.node[**].Communication.MAC.resyncTime = 1 # timer for re-sending SYNC msg, in seconds (default = 6s)
SN.node[**].Communication.MAC.waitTimeout = 1 # timeout for expecting a reply to DATA or RTS packet (default = 5ms)
SN.node[**].Communication.MAC.listenTimeout = 1 # timeout for TA (Activation event) (default = 15ms)
#SN.node[**].Communication.MAC.frameTime = 2 #Period to proceed with the tranmission (default = 610ms)
SN.node[**].Communication.MAC.frameTime = 1 #Period to proceed with the tranmission (default = 610ms)
#SN.node[**].Communication.MAC.collisionResolution = 1

#Contention period is a random period after every transmit on every node and statistically allows every node equal access to the media
#This parameter has a dependency with the number of data exchanged (iterations & targets): less data --> lower values 
#SN.node[**].Communication.MAC.contentionPeriod = 3 #(default = 10ms, 3-5ms does not give TX failures for iter=20 & targets=8)
SN.node[**].Communication.MAC.contentionPeriod =1

#a sufficiently large buffer is needed to tolerate the store of rx data form differnet iterations ( more data to exchange (iterations or targets) --> higher values)  
SN.node[**].Communication.MAC.macBufferSize = 16384

# ==============================================
# Node: Communication: Routing (Network Layer)
# ==============================================
### Routing without overhaead (ideal)
SN.node[**].Communication.Routing.netDataFrameOverhead = 0
SN.node[**].Communication.**.collectTraceInfo = false

# ========================================================
# ADDITIONAL CONFIGURATION: ideal network
# ========================================================
[Config ideal]
SN.dummy_communication = true 			

# ========================================================
# ADDITIONAL CONFIGURATION: real network
# ========================================================
[Config real]
SN.dummy_communication = false 			

# ========================================================
# ADDITIONAL CONFIGURATION: real network & fast target
# ========================================================
[Config real_fasttarget]
SN.dummy_communication = false 			
SN.physicalProcess[**].update_time = 0.125


# ========================================================
# ADDITIONAL CONFIGURATION: real network & high bitrate capability
# ========================================================
[Config real1Mbps]
SN.dummy_communication = false 			
SN.node[**].Communication.Radio.RadioParametersFile = "../../../models/COM/wifi.txt"


# ========================================================
# ADDITIONAL CONFIGURATION: real network & fast target + bitrate
# ========================================================
[Config real1Mbps_fastt]
SN.dummy_communication = false 		
SN.physicalProcess[**].update_time = 0.125
SN.node[**].Communication.Radio.RadioParametersFile = "../../../models/COM/wifi.txt"


# ========================================================
# ADDITIONAL CONFIGURATION: ideal network & various targets
# ========================================================
[Config ideal_targets]
sim-time-limit = 50s
SN.dummy_communication = true 			

SN.numPhysicalProcesses = ${n=2,3,4} #number of sensed data (i.e. moving targets)
SN.physicalProcess[**].noise_max = 20
SN.physicalProcess[**].noise_min = 10
SN.physicalProcess[**].move_type = "lin_noise"
SN.physicalProcess[**].move_later = 0
SN.physicalProcess[**].noise = 10
SN.physicalProcess[**].update_time = 0.25
SN.physicalProcess[**].random_init = true

SN.node[**].Application.pause_execution = false
SN.node[**].Application.pause_executionID = 3 #-1 for all
SN.node[1].Application.displayStats = false
SN.node[3].Application.displayStats = true


# ========================================================
# ADDITIONAL CONFIGURATION: real network & various targets
# ========================================================
[Config real_targets]
sim-time-limit = 40s
SN.dummy_communication = false 			#'false'=enable the wireless communication pipeline 

SN.numPhysicalProcesses = ${n=2,3,4} #number of sensed data (i.e. moving targets)
SN.physicalProcess[**].noise_max = 20
SN.physicalProcess[**].noise_min = 10
SN.physicalProcess[**].move_type = "lin_noise"
SN.physicalProcess[**].move_later = 0
SN.physicalProcess[**].noise = 10
SN.physicalProcess[**].update_time = 0.25
SN.physicalProcess[**].random_init = true

SN.node[**].Application.pause_execution = false
SN.node[**].Application.pause_executionID = 3 #-1 for all
SN.node[1].Application.displayStats = false
SN.node[3].Application.displayStats = true


# ========================================================
# ADDITIONAL CONFIGURATION: real network & various targets (high delay case)
# ========================================================
[Config real_targets10]
sim-time-limit = 50s
SN.dummy_communication = false 			#'false'=enable the wireless communication pipeline 
SN.node[**].Application.iter_max = 10

SN.numPhysicalProcesses = 10 #number of sensed data (i.e. moving targets)
SN.physicalProcess[**].noise_max = 20
SN.physicalProcess[**].noise_min = 10
SN.physicalProcess[**].move_type = "lin_noise"
SN.physicalProcess[**].move_later = 0
SN.physicalProcess[**].noise = 10
SN.physicalProcess[**].update_time = 0.25
SN.physicalProcess[**].random_init = true
SN.physicalProcess[**].unique_color = false

SN.node[1].Application.displayStats = false
SN.node[3].Application.displayStats = true
SN.node[**].Application.pause_execution = false
SN.node[**].Application.pause_executionID = 3 #-1 for all
SN.node[**].Communication.Radio.RadioParametersFile = "../../../models/COM/wifi.txt"
