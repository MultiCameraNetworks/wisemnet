### ------------------------------------------------------------------------ ###
### WiseMultiCameraPeriodicApp_DPF - demo2
### 
### Description: multi-camera tracking for a single moving target using DPF algorithm.
###				 single target tracking with four cameras with any communication delay
### 
### Available simulations extending the configuration in [General]:none
###
###	References:	
###		- DPF algorithm: 
###			C. Nastasi, A. Cavallaro "Distributed target tracking under realistic network conditions"
###			Proc. of Sensor Signal Processing for Defence (SSPD), London, UK, 28-29 September, 2011
###			http://ieeexplore.ieee.org/document/6253415/ 
###		
### Please cite the following reference when publishing results obtained with WiseMnet:
###   J. SanMiguel & A. Cavallaro,
###   "Networked Computer Vision: the importance of a holistic simulator",
###   IEEE Computer, 50(7):35-43, Jul 2017, http://ieeexplore.ieee.org/document/7971873/		
###
### Date: 2011-09-01 (updated 2017-06-01)
### Original Author: Christian Nastasi (nastasichr@gmail.com)
### Author: juancarlos.sanmiguel@uam.es (Universidad Autonoma de Madrid)
### 
### ------------------------------------------------------------------------ ###

[General]
include ../WiseCastalia.ini  # ALWAYS include WiseCastalia.ini

sim-time-limit =  3600s
# ==============================================
# Sensor Network setup
# ==============================================
SN.field_x = 160                   # meters
SN.field_y = 120                   # meters
SN.numNodes = 4                          
SN.numPhysicalProcesses = 1              
#SN.dummy_communication = true    # uncomment for dummy communication

# ==============================================
# Physical Processes (environment's events) 
# ==============================================
SN.wiseTerrain.gui = "opencv" 
SN.wiseTerrain.gui_wait_start = true 
SN.physicalProcessName = "WiseMovingTarget"
# --- 
SN.physicalProcess[0].x_init = 0
SN.physicalProcess[0].y_init = 60.00
SN.physicalProcess[0].bb_width = 10.00
SN.physicalProcess[0].bb_height = 10.00
SN.physicalProcess[0].update_time = 20.00
#SN.physicalProcess[0].move_min_x = 6
#SN.physicalProcess[0].move_max_x = 150
##SN.physicalProcess[0].move_min_y = 30
##SN.physicalProcess[0].move_max_y = 30
#SN.physicalProcess[0].move_min_y = 60
#SN.physicalProcess[0].move_max_y = 60
SN.physicalProcess[0].move_type = "lin_noise"
SN.physicalProcess[0].log_enabled = false
SN.physicalProcess[0].move_later = 60
# ==============================================
# Nodes  
# ==============================================
SN.node[0].xCoor = 50.00
SN.node[0].yCoor = 50.00
SN.node[0].zCoor = 5.00
SN.node[0].phi = 0.00
SN.node[0].theta = 0.00
SN.node[1].xCoor = 80.00
SN.node[1].yCoor = 51.00
SN.node[1].zCoor = 0.00
SN.node[1].phi = 0.00
SN.node[1].theta = 0.00
SN.node[2].xCoor = 65.00
SN.node[2].yCoor = 80.00
SN.node[2].zCoor = 0.00
SN.node[2].phi = 0.00
SN.node[2].theta = 0.00
#SN.node[3].xCoor = 150.00    # Node 1 looses and node 3 finds at the same time
SN.node[3].xCoor = 160.00    # Node 1 losses and node 3 finds after a while
#SN.node[3].xCoor = 142.00    # Node 1 loses and node 3 had found already 
SN.node[3].yCoor = 50.00     
SN.node[3].zCoor = 0.00
SN.node[3].phi = 0.00
SN.node[3].theta = 0.00

# ==============================================
# Applications 
# ==============================================
SN.node[**].ApplicationName = "WiseMultiCameraPeriodicApp_DPF"
SN.node[**].Application.collectTraceInfo = true

# ==============================================
# Sensor Managers
# ==============================================
SN.node[**].SensorManagerName = "WiseCameraManager"
SN.node[**].SensorManager.fov_type = "bounding_box"
SN.node[**].SensorManager.fov_bb_width = 60.000000
SN.node[**].SensorManager.fov_bb_height = 60.000000
SN.node[**].SensorManager.collectTraceInfo = false

# ==============================================
# Resource Managers (cpu, memory, energy)
# ==============================================
### Note: 'sigmaCPUClockDrift = 0' means NO drift (ideal)
SN.node[**].ResourceManager.sigmaCPUClockDrift = 0.000000

# ==============================================
# Communication: DUMMY Wireless Channel (if used)
# ==============================================
SN.dummyChannel.collectTraceInfo = false
 
# ==============================================
# Communication: Wireless Channel
# ==============================================
### Ideal wireless channel (unit disk model)
SN.wirelessChannel.sigma = 0
SN.wirelessChannel.bidirectionalSigma = 0
SN.wirelessChannel.PLd0 = -172
SN.wirelessChannel.collectTraceInfo = false
 
# ==============================================
# Communication: Radio (Physical Layer)
# ==============================================
### Ideal radio parameters... 
SN.node[**].Communication.Radio.RadioParametersFile = "../../../models/COM/CC2420.txt"
SN.node[**].Communication.Radio.mode = "IDEAL"
SN.node[**].Communication.Radio.collisionModel = 2  # 0:None  1:Simplistic  2:Additive
SN.node[**].Communication.Radio.maxPhyFrameSize = 0 # no limits
SN.node[**].Communication.Radio.phyFrameOverhead = 0 
 
# ==============================================
# Communication: MAC (Datalink Layer)
# ==============================================
### MAC without overhaead (ideal)
SN.node[**].Communication.MAC.macPacketOverhead = 0
SN.node[**].Communication.MACProtocolName = "TunableMAC"
 
# ==============================================
# Communication: Routing (Network Layer)
# ==============================================
### Routing without overhaead (ideal)
SN.node[**].Communication.Routing.netDataFrameOverhead = 0

SN.node[**].Communication.**.collectTraceInfo = false
SN.node[**].Application.sampling_time = 5
#SN.node[*].Application.trace_particles = true
SN.node[**].Application.particle_spreading_factor = 10
SN.node[**].Application.n_particles = 100
